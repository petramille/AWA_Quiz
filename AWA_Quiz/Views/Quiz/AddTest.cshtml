@model AWA_Quiz.Models.QuizViewModel

@{
    ViewBag.Title = "AddTest";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4>Add test</h4>

<p>Add question details to make a new quiz</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "")

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.AnswerText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnswerText, new { htmlAttributes = new { @class = "form-control" } })
                <p>Check the box if the answer is correct</p>
                @Html.RadioButtonFor(model => model.IsCorrect, new { })
                @Html.ValidationMessageFor(model => model.AnswerText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnswerText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnswerText, new { htmlAttributes = new { @class = "form-control" } })
                <p>Check the box if the answer is correct</p>
                @Html.RadioButtonFor(model => model.IsCorrect, new { })
                @Html.ValidationMessageFor(model => model.AnswerText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnswerText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnswerText, new { htmlAttributes = new { @class = "form-control" } })
                <p>Check the box if the answer is correct</p>
                @Html.RadioButtonFor(model => model.IsCorrect, new { })
                @Html.ValidationMessageFor(model => model.AnswerText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnswerText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnswerText, new { htmlAttributes = new { @class = "form-control" } })
                <p>Check the box if the answer is correct</p>
                @Html.RadioButtonFor(model => model.IsCorrect, new { })
                @Html.ValidationMessageFor(model => model.AnswerText, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}
<div class="form-group">
    @using (Html.BeginForm("AddTest", "Quiz", FormMethod.Post))
    {
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save and continue" class="btn btn-default" />
        </div>
    }
</div>

<div class="form-group">
    @using (Html.BeginForm("AddTest", "Quiz", FormMethod.Post))
    {
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save and finish" class="btn btn-default" />
        </div>
    }
</div>

<div class="form-group">
    @using (Html.BeginForm("Index", "Quiz", FormMethod.Post))
    {
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Cancel" class="btn btn-default" />
        </div>
    }
</div>